<!DOCTYPE html>
<html>
<head>
    <title>Receipts Management</title>
    <style>
        .content-wrapper {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .controls {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }
        .filter-section {
            background: #f5f5f5;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .filter-section h3 {
            margin-top: 0;
        }
        .filter-group {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
            align-items: center;
        }
        table {
            border-collapse: collapse;
            width: 100%;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            position: sticky;
            top: 0;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .action-buttons {
            display: flex;
            gap: 5px;
        }
        .action-buttons button {
            padding: 5px 10px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }
        .delete-btn {
            background-color: #dc3545;
            color: white;
        }
        .transfer-btn {
            background-color: #28a745;
            color: white;
        }
        .remove-btn {
            background-color: #ffc107;
            color: black;
        }
        .summary-section {
            background: #fff;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        .summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 10px;
        }
        .summary-item {
            background: #f8f9fa;
            padding: 10px;
            border-radius: 4px;
        }
        .export-options {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }
        .export-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
        }
        .compliance-note {
            font-size: 0.9em;
            color: #666;
            margin-top: 20px;
            padding: 10px;
            background: #f8f9fa;
            border-left: 3px solid #007bff;
        }
    </style>
</head>
<body>
    <div class="content-wrapper">
        <h1>Receipts Management</h1>

        <!-- Summary Section -->
        <div class="summary-section">
            <h3>Summary</h3>
            <div class="summary-grid">
                <div class="summary-item">
                    <strong>Total Receipts:</strong> <%= receipts.length %>
                </div>
                <div class="summary-item">
                    <strong>Total Amount:</strong> $<%= receipts.reduce((sum, r) => sum + r.amount, 0).toFixed(2) %>
                </div>
                <div class="summary-item">
                    <strong>This Month:</strong> $<%= receipts.filter(r => new Date(r.date).getMonth() === new Date().getMonth()).reduce((sum, r) => sum + r.amount, 0).toFixed(2) %>
                </div>
                <div class="summary-item">
                    <strong>Pending Review:</strong> <%= receipts.filter(r => !r.reviewed).length %>
                </div>
            </div>
        </div>

        <!-- Filter Section -->
        <div class="filter-section">
            <h3>Filters</h3>
            <form id="filterForm" action="/receipts" method="GET">
                <div class="filter-group">
                    <label>Date Range:</label>
                    <input type="date" name="startDate" id="startDate">
                    <span>to</span>
                    <input type="date" name="endDate" id="endDate">
                </div>
                <div class="filter-group">
                    <label>Category:</label>
                    <select name="category">
                        <option value="">All Categories</option>
                        <% new Set(receipts.map(r => r.category)).forEach(category => { %>
                            <option value="<%= category %>"><%= category.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) %></option>
                        <% }); %>
                    </select>
                    <label>Payment Method:</label>
                    <select name="paymentMethod">
                        <option value="">All Methods</option>
                        <option value="cash">Cash</option>
                        <option value="credit_card">Credit Card</option>
                        <option value="debit_card">Debit Card</option>
                        <option value="bank_transfer">Bank Transfer</option>
                    </select>
                    <label>Amount Range:</label>
                    <input type="number" name="minAmount" placeholder="Min" step="0.01">
                    <input type="number" name="maxAmount" placeholder="Max" step="0.01">
                </div>
                <button type="submit">Apply Filters</button>
                <button type="reset">Reset</button>
            </form>
        </div>

        <!-- Export Options -->
        <div class="export-options">
            <button class="export-btn" onclick="exportData('csv')">Export to CSV</button>
            <button class="export-btn" onclick="exportData('pdf')">Export to PDF</button>
            <button class="export-btn" onclick="exportData('excel')">Export to Excel</button>
            <select id="exportTimeframe">
                <option value="all">All Time</option>
                <option value="thisMonth">This Month</option>
                <option value="lastMonth">Last Month</option>
                <option value="thisQuarter">This Quarter</option>
                <option value="thisYear">This Year</option>
                <option value="lastYear">Last Year</option>
                <option value="custom">Custom Range</option>
            </select>
        </div>

        <!-- Main Table -->
        <div style="overflow-x: auto;">
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Vendor</th>
                        <th>Description</th>
                        <th>Amount</th>
                        <th>Category</th>
                        <th>Payment Method</th>
                        <th>Image</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% receipts.forEach((receipt) => { %>
                        <tr>
                            <td><%= new Date(receipt.date).toLocaleDateString() %></td>
                            <td><%= receipt.vendor %></td>
                            <td><%= receipt.description %></td>
                            <td>$<%= receipt.amount.toFixed(2) %></td>
                            <td><%= receipt.category.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) %></td>
                            <td><%= receipt.paymentMethod.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) %></td>
                            <td>
                                <% if (receipt.imageFilename) { %>
                                    <a href="/receipt-image/<%= receipt.imageFilename %>" target="_blank">View</a>
                                <% } else { %>
                                    N/A
                                <% } %>
                            </td>
                            <td><%= receipt.reviewed ? 'Reviewed' : 'Pending Review' %></td>
                            <td>
                                <div class="action-buttons">
                                    <button class="delete-btn" onclick="deleteReceipt('<%= receipt.id %>')">Delete</button>
                                </div>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>

        <div class="compliance-note">
            <strong>Compliance Note:</strong> Receipts are stored in accordance with ATO requirements. 
            Digital copies are maintained for 5 years from the date of the transaction. 
            Please ensure all receipts include ABN, GST amount, and date of transaction.
        </div>

        <div class="controls">
            <a href="/add-receipt" class="export-btn">Add New Receipt</a>
            <a href="/dashboard" class="export-btn" style="background-color: #6c757d;">Back to Dashboard</a>
        </div>
    </div>

    <script>
        function exportData(format) {
            const timeframe = document.getElementById('exportTimeframe').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            
            window.location.href = `/export-receipts?format=${format}&timeframe=${timeframe}&startDate=${startDate}&endDate=${endDate}`;
        }

        function deleteReceipt(id) {
            if (confirm('Are you sure you want to delete this receipt? This action cannot be undone.')) {
                fetch(`/delete-receipt/${id}`, { method: 'POST' })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('Error deleting receipt: ' + (data.error || 'Unknown error'));
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error deleting receipt: ' + error.message);
                    });
            }
        }

        // Handle custom date range when "Custom Range" is selected
        document.getElementById('exportTimeframe').addEventListener('change', function() {
            const dateInputs = document.querySelectorAll('#filterForm input[type="date"]');
            dateInputs.forEach(input => {
                input.style.display = this.value === 'custom' ? 'inline' : 'none';
            });
        });

        // Initialize date inputs
        document.getElementById('startDate').valueAsDate = new Date(new Date().getFullYear(), new Date().getMonth(), 1);
        document.getElementById('endDate').valueAsDate = new Date();
    </script>
</body>
</html>
